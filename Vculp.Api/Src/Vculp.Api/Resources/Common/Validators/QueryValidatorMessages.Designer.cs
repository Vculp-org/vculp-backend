//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vculp.Api.Resources.Common.Validators {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class QueryValidatorMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal QueryValidatorMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Vculp.Api.Resources.Common.Validators.QueryValidatorMessages", typeof(QueryValidatorMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is not a valid supported load type..
        /// </summary>
        public static string AllExpandedVehiclesQuery_InvalidSuppoertedLoadType {
            get {
                return ResourceManager.GetString("AllExpandedVehiclesQuery_InvalidSuppoertedLoadType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is not a valid supported load type..
        /// </summary>
        public static string AllVehiclesQuery_InvalidSuppoertedLoadType {
            get {
                return ResourceManager.GetString("AllVehiclesQuery_InvalidSuppoertedLoadType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} should be later than or equal to {1}..
        /// </summary>
        public static string CustomerOrderLinesQueryValidator_OrdersBeforeShouldBeLaterThanOrEqualToOrdersAfter {
            get {
                return ResourceManager.GetString("CustomerOrderLinesQueryValidator_OrdersBeforeShouldBeLaterThanOrEqualToOrdersAfte" +
                        "r", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} time should be later than the {1} time..
        /// </summary>
        public static string DocketItemsQueryValidator_CreatedBeforeTimeShouldBeLaterThanCreatedAfterTime {
            get {
                return ResourceManager.GetString("DocketItemsQueryValidator_CreatedBeforeTimeShouldBeLaterThanCreatedAfterTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} time should be later than the {1} time.
        /// </summary>
        public static string DocketsQueryValidator_CreatedBeforeTimeShouldBeLaterThanCreatedAfterTime {
            get {
                return ResourceManager.GetString("DocketsQueryValidator_CreatedBeforeTimeShouldBeLaterThanCreatedAfterTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} not found..
        /// </summary>
        public static string FieldDataNotFound {
            get {
                return ResourceManager.GetString("FieldDataNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum length for {0} is {1}.
        /// </summary>
        public static string FieldExceedsMaximumLengthError {
            get {
                return ResourceManager.GetString("FieldExceedsMaximumLengthError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is already in use..
        /// </summary>
        public static string FieldIsAlreadyInUse {
            get {
                return ResourceManager.GetString("FieldIsAlreadyInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not valid.
        /// </summary>
        public static string FieldIsNotValid {
            get {
                return ResourceManager.GetString("FieldIsNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be in the past.
        /// </summary>
        public static string FieldIsNotValidDate_InThePast {
            get {
                return ResourceManager.GetString("FieldIsNotValidDate_InThePast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid email address.
        /// </summary>
        public static string FieldIsNotValidEmail {
            get {
                return ResourceManager.GetString("FieldIsNotValidEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not valid ISO 8601 date.
        /// </summary>
        public static string FieldIsNotValidISO8601Date {
            get {
                return ResourceManager.GetString("FieldIsNotValidISO8601Date", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is required..
        /// </summary>
        public static string FieldIsRequiredError {
            get {
                return ResourceManager.GetString("FieldIsRequiredError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} length should be greater than {1}.
        /// </summary>
        public static string FieldLengthGreaterThanIsRequired {
            get {
                return ResourceManager.GetString("FieldLengthGreaterThanIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} length should be {1}.
        /// </summary>
        public static string FieldLengthIsRequired {
            get {
                return ResourceManager.GetString("FieldLengthIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; must be greater than {1}.
        /// </summary>
        public static string FieldMustbeGreaterThan {
            get {
                return ResourceManager.GetString("FieldMustbeGreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; must be greater than or equal to {1}..
        /// </summary>
        public static string FieldMustBeGreaterThanOrEqual {
            get {
                return ResourceManager.GetString("FieldMustBeGreaterThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; must be less than or equal to {1}..
        /// </summary>
        public static string FieldMustBeLessThanOrEqual {
            get {
                return ResourceManager.GetString("FieldMustBeLessThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} should be exactly {1} characters long..
        /// </summary>
        public static string FieldShouldContainExactNumberOfCharacters {
            get {
                return ResourceManager.GetString("FieldShouldContainExactNumberOfCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File mime type is not allowed.
        /// </summary>
        public static string FileMimeType_IsNotAllowed {
            get {
                return ResourceManager.GetString("FileMimeType_IsNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} should be null when order line filter is not specified..
        /// </summary>
        public static string IncludeRelatedOrderLineNotesIsNotRequiredError {
            get {
                return ResourceManager.GetString("IncludeRelatedOrderLineNotesIsNotRequiredError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; must be between {1} &lt;-&gt; {2}..
        /// </summary>
        public static string InvalidRangeError {
            get {
                return ResourceManager.GetString("InvalidRangeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} should be later than or equal to {1}..
        /// </summary>
        public static string LoadsQueryValidator_CreatedBeforeShouldBeLaterThanOrEqualToCreatedAfter {
            get {
                return ResourceManager.GetString("LoadsQueryValidator_CreatedBeforeShouldBeLaterThanOrEqualToCreatedAfter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; must be null.
        /// </summary>
        public static string MustBeNull {
            get {
                return ResourceManager.GetString("MustBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify other filter parameters when Equals is specified.
        /// </summary>
        public static string OrderLinesCollectionQueryValidator_EqualsTheOnlyOneSpecified {
            get {
                return ResourceManager.GetString("OrderLinesCollectionQueryValidator_EqualsTheOnlyOneSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one of {0} or {1} should be specified.
        /// </summary>
        public static string OrderLinesCollectionQueryValidator_OnlyOne_ShouldBe_Specified {
            get {
                return ResourceManager.GetString("OrderLinesCollectionQueryValidator_OnlyOne_ShouldBe_Specified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} should be less than LessThan or LessThanOrEqual.
        /// </summary>
        public static string OrderLinesCollectionQueryValidator_ShouldBeGreaterThan_Field {
            get {
                return ResourceManager.GetString("OrderLinesCollectionQueryValidator_ShouldBeGreaterThan_Field", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} should be greater than GreaterThan or GreaterThanOrEqualTo.
        /// </summary>
        public static string OrderLinesCollectionQueryValidator_ShouldBeLessThan_Field {
            get {
                return ResourceManager.GetString("OrderLinesCollectionQueryValidator_ShouldBeLessThan_Field", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid supported product type..
        /// </summary>
        public static string TrailerCollectionQuery_InvalidSupportedProductType {
            get {
                return ResourceManager.GetString("TrailerCollectionQuery_InvalidSupportedProductType", resourceCulture);
            }
        }
    }
}
