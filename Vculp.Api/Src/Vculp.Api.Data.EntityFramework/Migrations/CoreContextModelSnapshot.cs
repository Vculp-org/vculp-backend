// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vculp.Api.Data.EntityFramework;

#nullable disable

namespace Vculp.Api.Data.EntityFramework.Migrations
{
    [DbContext(typeof(CoreContext))]
    partial class CoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Vculp.Api.Domain.Core.Booking.Ride", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClusterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClusterId"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<decimal>("FromLatitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FromLongitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdated")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int?>("LastUpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdatedByUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RequestedFare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ToLatitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ToLongitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("ClusterId")
                        .IsUnique()
                        .HasDatabaseName("IX_Rides_ClusterId");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("ClusterId"));

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Rides_IsDeleted");

                    b.ToTable("Rides", "Booking");
                });

            modelBuilder.Entity("Vculp.Api.Domain.Core.FareRecommendation.FareRecommendationDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ActualDistanceAfterFreeKms")
                        .HasColumnType("float");

                    b.Property<double>("BaseFare")
                        .HasColumnType("float");

                    b.Property<double>("BaseFareFreeKms")
                        .HasColumnType("float");

                    b.Property<int>("ClusterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClusterId"));

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<double>("DurationFare")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdated")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<double>("MinimumDistanceFare")
                        .HasColumnType("float");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("RecommendedDistanceFare")
                        .HasColumnType("float");

                    b.Property<double>("TollCharges")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<Guid>("VehicleTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("YourMinimumFare")
                        .HasColumnType("float");

                    b.Property<double>("YourRecommendedFare")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("ClusterId")
                        .IsUnique()
                        .HasDatabaseName("IX_FareRecommendationDetails_ClusterId");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("ClusterId"));

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_FareRecommendationDetails_IsDeleted");

                    b.ToTable("FareRecommendationDetails", "Fare");
                });

            modelBuilder.Entity("Vculp.Api.Domain.Core.User.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClusterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClusterId"));

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ExternalUserId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdated")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("ClusterId")
                        .IsUnique()
                        .HasDatabaseName("IX_Users_ClusterId");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("ClusterId"));

                    b.HasIndex("ExternalUserId")
                        .IsUnique();

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Users_IsDeleted");

                    b.HasIndex("MobileNumber")
                        .IsUnique();

                    b.ToTable("Users", "User");
                });

            modelBuilder.Entity("Vculp.Api.Domain.Core.Vehicle.VehicleType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("ClusterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClusterId"));

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdated")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("NoOfSeaters")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("ClusterId")
                        .IsUnique()
                        .HasDatabaseName("IX_VehicleTypes_ClusterId");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("ClusterId"));

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_VehicleTypes_IsDeleted");

                    b.ToTable("VehicleTypes", "Vehicle");
                });

            modelBuilder.Entity("Vculp.Api.Domain.Core.Vehicle.VehicleType", b =>
                {
                    b.OwnsMany("Vculp.Api.Domain.Core.Vehicle.FareDetails", "FareDetails", b1 =>
                        {
                            b1.Property<Guid>("VehicleTypeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("ClusterId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("ClusterId"));

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<double>("BaseFare")
                                .HasColumnType("float");

                            b1.Property<double>("CancellationFeePercentage")
                                .HasColumnType("float");

                            b1.Property<double>("CancellationMaxAmount")
                                .HasColumnType("float");

                            b1.Property<double>("FreeKms")
                                .HasColumnType("float");

                            b1.Property<double>("MinPerKmFare")
                                .HasColumnType("float");

                            b1.Property<double>("PerKmFare")
                                .HasColumnType("float");

                            b1.Property<double>("PerMinuteFare")
                                .HasColumnType("float");

                            b1.HasKey("VehicleTypeId", "ClusterId", "City");

                            SqlServerKeyBuilderExtensions.IsClustered(b1.HasKey("VehicleTypeId", "ClusterId", "City"), false);

                            b1.HasIndex("ClusterId")
                                .IsUnique();

                            SqlServerIndexBuilderExtensions.IsClustered(b1.HasIndex("ClusterId"));

                            b1.ToTable("FareDetails", "Vehicle");

                            b1.WithOwner()
                                .HasForeignKey("VehicleTypeId");
                        });

                    b.Navigation("FareDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
